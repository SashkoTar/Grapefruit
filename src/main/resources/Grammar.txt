flow : statements
statements : (assign_stmt | if_branch)*
assign_stmt : ID ASSIGN ID ";"
if_branch: IF condition code_block | IF condition code_block THEN code_block
code_block: BEGIN_BLOCK statements END_BLOCK
condition: LPAR ID RELOP ID RPAR


{
if (x > 1) {
 call_something
} else {
 x = x - 2
}
x = a + b
}




DOT
http://graphs.grevian.org/graph/4522467620028416
http://www.webgraphviz.com/

digraph finite_state_machine {
size="4,4";

start [label="Start", shape=circle];
joinPoint1 [shape=none, width=0, height=0, label=""];
bentPoint1 [shape=none, width=0, height=0, label=""];
if1 [label="if x > 3", shape=diamond];
block1 [label = "x:=1", shape=box];
block2 [label = "x:=-2", shape=box];
finish [label = "End", shape=doublecircle];

start -> joinPoint1 -> if1;
//joinPoint1 -> if1;
if1 -> block1 [label="Yes", color=red, style=bold];
if1 -> block2 [label="No"];
block1 -> bentPoint1;
block2 -> finish;
{rank=same; if1; block1;}
{rank=same; joinPoint1 -> bentPoint1[dir=back];}
}



 digraph g{
 ranksep=0.2;

 //node[shape=box3d, width=2.3, height=0.6, fontname="Arial"];
 start[label="Start", shape=circle];
 if1[label="if x > 3", shape=diamond];
 block1[label = "x := 1", shape=box];
 block2[label = "x := -1", shape=box];
 end [label = "End", shape=doublecircle];


 node[shape=point, width=0, height=0, label=""];
 edge[dir=none];
 start -> joinPont1 -> if1;
 if1 -> block2[label="Yes"]
 block2 -> end;
 {rank=same; joinPont1 -> block1[dir=back];}
 {rank=same; if1 -> bentPoint[label="No"];}
 bentPoint -> block1[dir=normal];
 }